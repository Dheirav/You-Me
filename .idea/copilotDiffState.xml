<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/MVP_ROADMAP.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/MVP_ROADMAP.md" />
              <option name="originalContent" value="# DuoSpace &#10;*A private digital space for couples to share moments, milestones, and memories.*&#10;&#10;---&#10;&#10;##  Overview&#10;DuoSpace is an Android app that creates a shared, secure space for couples.  &#10;It allows two users to **link their accounts** with a unique code and unlock features like:&#10;&#10;-  **Location Sharing** – toggle on/off to share real-time location.&#10;- ️ **Photo Sharing + Widget** – upload pictures to a shared gallery with a widget that rotates partner photos.&#10;-  **Milestone Tracker** – record and display relationship milestones (first linked, 100 days, custom events).&#10;-  **Secure Couple Linking** – join using a unique 6-digit code, ensuring privacy.&#10;&#10;This is the **MVP version** of DuoSpace, designed to be lightweight, private, and simple.&#10;&#10;---&#10;&#10;## ️ Tech Stack&#10;&#10;- **Frontend:** Kotlin + Jetpack Compose&#10;- **Backend:** Firebase (Auth, Firestore, Storage)&#10;- **Location Services:** FusedLocationProvider API&#10;- **UI:** Material You + Jetpack Compose&#10;- **Authentication:** Firebase Authentication (Email/Password, OTP optional)&#10;&#10;---&#10;&#10;##  Database Structure (Firestore)&#10;&#10;~~~  &#10;users/&#10;   userId/&#10;      email&#10;      coupleId&#10;      joinedAt&#10;&#10;couples/&#10;   coupleId/&#10;      users: [userId1, userId2]&#10;      milestones/&#10;         milestoneId/&#10;            title&#10;            date&#10;            autoGenerated (bool)&#10;      photos/&#10;         photoId/&#10;            url&#10;            caption&#10;            timestamp&#10;      locations/&#10;         userId1: { lat, long, timestamp }&#10;         userId2: { lat, long, timestamp }&#10;~~~  &#10;&#10;---&#10;&#10;##  Features&#10;&#10;### ✅ Authentication &amp; Couple Linking&#10;- User signs up with Firebase Authentication.&#10;- Generates a **6-digit invite code** to link with partner.&#10;- Once accepted, both accounts share a `coupleId`.&#10;&#10;###  Location Sharing&#10;- Toggle-based location updates.&#10;- Partner can view **last known location + timestamp**.&#10;&#10;### ️ Photo Sharing &amp; Widget&#10;- Uploads saved to Firebase Storage.&#10;- Widget rotates through latest partner-uploaded photos.&#10;&#10;###  Milestones&#10;- Auto-generated milestone (first linked date).&#10;- Custom milestones (anniversaries, memories, etc.).&#10;- Timeline view for easy navigation.&#10;&#10;---&#10;&#10;## ️ Installation &amp; Setup&#10;&#10;1. Clone the repository:&#10;   ~~~bash&#10;   git clone https://github.com/yourusername/duospace.git&#10;   cd duospace&#10;   ~~~&#10;&#10;2. Open the project in **Android Studio**.&#10;&#10;3. Setup Firebase:&#10;    - Create a Firebase project in the [Firebase Console](https://console.firebase.google.com/).&#10;    - Enable **Authentication (Email/Password)**, **Firestore**, and **Storage**.&#10;    - Download `google-services.json` and place it inside:&#10;      ~~~&#10;      app/&#10;        google-services.json&#10;      ~~~&#10;&#10;4. Sync project with Gradle.&#10;&#10;5. Run the app on an emulator or physical device.&#10;&#10;---&#10;&#10;##  Future Enhancements&#10;&#10;-  Private chat &amp; voice notes.&#10;- ️ Daily reassurance messages (scheduled reminders).&#10;-  AI-powered relationship insights.&#10;-  Shared journal &amp; notes.&#10;-  Gift planner &amp; event reminders.&#10;&#10;---&#10;&#10;##  License&#10;This project is licensed under the MIT License.&#10;&#10;---&#10;&#10;## ❤️ Credits&#10;Built with  for couples who want a private space to share their journey.  &#10;" />
              <option name="updatedContent" value="# You&amp;Me &#10;*A private digital space for couples to share moments, milestones, and memories.*&#10;&#10;---&#10;&#10;##  Overview&#10;You&amp;Me is an Android app that creates a shared, secure space for couples.  &#10;It allows two users to **link their accounts** with a unique code and unlock features like:&#10;&#10;-  **Location Sharing** – toggle on/off to share real-time location.&#10;- ️ **Photo Sharing + Widget** – upload pictures to a shared gallery with a widget that rotates partner photos.&#10;-  **Milestone Tracker** – record and display relationship milestones (first linked, 100 days, custom events).&#10;-  **Secure Couple Linking** – join using a unique 6-digit code, ensuring privacy.&#10;&#10;This is the **MVP version** of You&amp;Me, designed to be lightweight, private, and simple.&#10;&#10;---&#10;&#10;## ️ Tech Stack&#10;&#10;- **Frontend:** Kotlin + Jetpack Compose&#10;- **Backend:** Firebase (Auth, Firestore, Storage)&#10;- **Location Services:** FusedLocationProvider API&#10;- **UI:** Material You + Jetpack Compose&#10;- **Authentication:** Firebase Authentication (Email/Password, OTP optional)&#10;&#10;---&#10;&#10;##  Database Structure (Firestore)&#10;&#10;~~~  &#10;users/&#10;   userId/&#10;      email&#10;      coupleId&#10;      joinedAt&#10;&#10;couples/&#10;   coupleId/&#10;      users: [userId1, userId2]&#10;      milestones/&#10;         milestoneId/&#10;            title&#10;            date&#10;            autoGenerated (bool)&#10;      photos/&#10;         photoId/&#10;            url&#10;            caption&#10;            timestamp&#10;      locations/&#10;         userId1: { lat, long, timestamp }&#10;         userId2: { lat, long, timestamp }&#10;~~~  &#10;&#10;---&#10;&#10;##  Features&#10;&#10;### ✅ Authentication &amp; Couple Linking&#10;- User signs up with Firebase Authentication.&#10;- Generates a **6-digit invite code** to link with partner.&#10;- Once accepted, both accounts share a `coupleId`.&#10;&#10;###  Location Sharing&#10;- Toggle-based location updates.&#10;- Partner can view **last known location + timestamp**.&#10;&#10;### ️ Photo Sharing &amp; Widget&#10;- Uploads saved to Firebase Storage.&#10;- Widget rotates through latest partner-uploaded photos.&#10;&#10;###  Milestones&#10;- Auto-generated milestone (first linked date).&#10;- Custom milestones (anniversaries, memories, etc.).&#10;- Timeline view for easy navigation.&#10;&#10;---&#10;&#10;## ️ Installation &amp; Setup&#10;&#10;1. Clone the repository:&#10;   ~~~bash&#10;   git clone https://github.com/yourusername/youandme.git&#10;   cd youandme&#10;   ~~~&#10;&#10;2. Open the project in **Android Studio**.&#10;&#10;3. Setup Firebase:&#10;    - Create a Firebase project in the [Firebase Console](https://console.firebase.google.com/).&#10;    - Enable **Authentication (Email/Password)**, **Firestore**, and **Storage**.&#10;    - Download `google-services.json` and place it inside:&#10;      ~~~&#10;      app/&#10;        google-services.json&#10;      ~~~&#10;&#10;4. Sync project with Gradle.&#10;&#10;5. Run the app on an emulator or physical device.&#10;&#10;---&#10;&#10;##  Future Enhancements&#10;&#10;-  Private chat &amp; voice notes.&#10;- ️ Daily reassurance messages (scheduled reminders).&#10;-  AI-powered relationship insights.&#10;-  Shared journal &amp; notes.&#10;-  Gift planner &amp; event reminders.&#10;&#10;---&#10;&#10;##  License&#10;This project is licensed under the MIT License.&#10;&#10;---&#10;&#10;## ❤️ Credits&#10;Built with  for couples who want a private space to share their journey." />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="originalContent" value="# ❤️ DuoSpace – A Private App for Two&#10;&#10;**DuoSpace### ⏳ Reassurance Scheduler&#10;- Pre-schedule loving or encoura###  Relationship Bot (Fun + AI)&#10;- AI bot that speaks like your partner.&#10;- Pre-trained with favorite phrases or memories.&#10;- Say things like:&#10;    - &quot;I miss you. Eat something.&quot;&#10;    - &quot;I love you, always.&quot;&#10;&#10;###  Location Sharing *(Optional)*&#10;- View each other's live or last known location.&#10;- Option to share only during defined hours or via toggle.&#10;&#10;### ⏰ Time-Zone Smart Features&#10;- App adapts reminders/notifications to both users' zones.&#10;- Suggests overlapping times for texts, calls, or events.&#10;&#10;###  Shared Notes&#10;- Write together: grocery lists, poems, dreams, ideas.&#10;- Notes have version history + tagging.&#10;&#10;###  Expense Tracking&#10;- Add expenses, split costs.&#10;- Monthly insights on shared or individual spending.&#10;&#10;###  Photo Slideshow Widget&#10;- Android/iOS widget that auto-rotates relationship photos.&#10;- Click opens photo with memory caption or story.&#10;&#10;###  Music Jam Calls&#10;- Shared call mode for listening to music together.&#10;- Syncs the playback and lets both queue songs.&#10;- Optional: background lo-fi + chat overlay.&#10;&#10;### ️ Voice-based Love Chatbot&#10;- Learns partner's voice (via training samples).&#10;- Use it for fun: ask it to say things your partner might say (e.g., &quot;It's okay, babe, I'm here.&quot;).&#10;- Can read scheduled reassurance messages aloud in their voice.&#10;&#10;---&#10;&#10;## ❤️ Core Relationship Features&#10;&#10;### 1. Enhanced Misunderstanding Resolution&#10;- Log complaints or emotional notes.&#10;- Once acknowledged by the other partner, both can view and discuss.&#10;- Marks issue as &quot;resolved&quot; after discussion or mutual closure.&#10;&#10;### 2. Advanced Reassurance via Timed Messages&#10;- Schedule comforting messages (e.g., &quot;I love you,&quot; &quot;Don't worry&quot;) at set times.&#10;- Can be one-time or repeating.&#10;- Optional: messages open with delay + cute animation.&#10;&#10;### 3. Enhanced &quot;Thought Bubble&quot;&#10;- Post anonymous thoughts/feelings (visible only to partner).&#10;- Partner &quot;taps to reveal&quot; when ready.&#10;- Great for introverts or emotional processing.&#10;&#10;---&#10;&#10;##  Utility &amp; Sync Features&#10;&#10;### 4. Enhanced Shared Calendar &amp; Global Reminders&#10;- Add relationship events, reminders, and countdowns.&#10;- Sync important dates like anniversaries, trips, deadlines.&#10;- Global reminder = both are notified.&#10;&#10;### 5. Enhanced Secure App Lock&#10;- Open app via PIN or biometric.&#10;- Optional &quot;Privacy Mode&quot; hides names on lock screen notifications.&#10;&#10;### 6. Enhanced Couple Linking System&#10;- One user creates a 6-digit join code.&#10;- Partner enters the code to link both accounts.&#10;- All shared data is tied to this coupleId.&#10;&#10;---&#10;&#10;##  Memory &amp; Experience Features&#10;&#10;### 7. Enhanced Shared Bucket List&#10;- Track dreams, trips, goals to do together.&#10;- Attach a photo/voice note once completed.&#10;- Add deadlines or milestone markers.&#10;&#10;### 8. Enhanced Relationship Timeline&#10;- Auto-generates memory timeline:&#10;    - First date, messages, voice notes, photos, milestones.&#10;- Option to export as a slideshow.&#10;&#10;---&#10;&#10;##  Media &amp; Interaction Features&#10;&#10;### 9. Enhanced Sleep Together Remotely&#10;- Sync sleep timers + night sounds/music.&#10;- &quot;Status Ring&quot; (e.g.,  asleep,  preparing for bed).&#10;- Goodnight notes or voice messages auto-play at set times.essages:&#10;    - &quot;You're doing amazing.&quot;&#10;    - &quot;You are loved.&quot;&#10;    - &quot;I believe in you.&quot;&#10;- Supports:&#10;    - One-time or **recurring messages**&#10;    - Scheduled **reveal time**&#10;    - Optional animation or &quot;gift-wrap&quot; effects&#10;&#10;###  Shared Calendar *(Future)*ivate emotional space for two people in a relationship. Built to strengthen connection, understanding, and love through meaningful features that go beyond chat—supporting real-time emotions, reflection, scheduling, and healing.&#10;&#10;---&#10;&#10;## ✨ MVP Highlights&#10;&#10;-  Secure 1:1 pairing using Couple Codes&#10;-  Real-time messaging with invisible message option&#10;-  Mood sharing system&#10;-  Thought Bubbles with delayed reveals&#10;- ⏳ Reassurance message scheduler&#10;-  Misunderstanding logger and emotion analytics&#10;-  Full privacy control with app lock&#10;-  Shared calendar &amp;  AI Companion (future scope)&#10;&#10;---&#10;&#10;##  Tech Stack&#10;&#10;- **Frontend**: Android Studio, Kotlin (Jetpack Compose)&#10;- **Backend**: Firebase Firestore (NoSQL), Firebase Auth, Firebase Functions (optional)&#10;- **Storage**: Firebase Cloud Storage&#10;- **Notifications**: Firebase Cloud Messaging (FCM)&#10;- **Analytics**: Firebase Analytics / custom Firestore logic&#10;&#10;---&#10;&#10;##  Features&#10;&#10;###  Couple Code System&#10;- Generate or enter a **6-digit code** to securely pair with your partner.&#10;- Ensures that **only one other person** can connect with you.&#10;- All app data is scoped to a shared `coupleId`.&#10;&#10;###  Real-Time Messaging&#10;- Fast, low-latency chatting system using Firebase Firestore.&#10;- Timestamped messages with sender identity.&#10;- Optionally send **&quot;invisible&quot; messages** that get revealed on interaction.&#10;&#10;###  Mood Sharing&#10;- Choose from preset moods (Happy, Sad, Angry, Anxious, Loved, etc.).&#10;- Share instantly with partner—each mood update is real-time.&#10;- Useful for days when words are hard.&#10;&#10;###  Thought Bubble (Delayed Reveal Notes)&#10;- Add emotional or sensitive thoughts.&#10;- Partner gets notified but must **tap to reveal** when ready.&#10;- Great for healing from misunderstandings or building trust.&#10;&#10;### ⏳ Reassurance Scheduler&#10;- Pre-schedule loving or encouraging messages:&#10;    - “You’re doing amazing.”&#10;    - “You are loved.”&#10;    - “I believe in you.”&#10;- Supports:&#10;    - One-time or **recurring messages**&#10;    - Scheduled **reveal time**&#10;    - Optional animation or “gift-wrap” effects&#10;&#10;###  Shared Calendar&#10;- Create and share events (trips, anniversaries, exams, etc.).&#10;- View partner's additions with countdown timers.&#10;- Receive push notifications for upcoming events.&#10;&#10;###  Misunderstanding Logger&#10;- Log a conflict with:&#10;    - Timestamp&#10;    - Your thoughts and feelings&#10;    - Optional partner feedback&#10;- Track which ones have been resolved.&#10;- Analytics to show how your communication is improving.&#10;&#10;###  Emotion Analytics Dashboard&#10;- Mood trends over weeks/months.&#10;- Average resolution time for misunderstandings.&#10;- Most common reassurance messages.&#10;- **Private to the couple only.**&#10;&#10;###  App Lock &amp; Privacy Mode&#10;- PIN, password, or biometric app locking.&#10;- Privacy Mode: Hides text previews, emoji reactions, and sensitive thoughts when locked.&#10;&#10;### ️ Relationship Timeline *(Auto-generated)*&#10;- Automatically creates a timeline of milestones:&#10;    - First linked date&#10;    - Messages with special tags (e.g., first &quot;I love you&quot;)&#10;    - Shared calendar events&#10;    - Custom entries&#10;&#10;### ✅ Bucket List for Two&#10;- Add dreams and goals together.&#10;- Check them off with:&#10;    - Date&#10;    - Proof (photo, audio, etc.)&#10;- Keeps the relationship fun and forward-looking.&#10;&#10;###  Sleep Together Mode&#10;- Soft background music with animated heartbeats.&#10;- Shows each other’s **online/offline** sleep status.&#10;- Tied to personal schedules (optional).&#10;&#10;###  Relationship Bot (Fun + AI)&#10;- AI bot that speaks like your partner.&#10;- Pre-trained with favorite phrases or memories.&#10;- Say things like:&#10;    - “I miss you. Eat something.”&#10;    - “I love you, always.”&#10;&#10;---&#10;&#10;## ️ Setup &amp; Development&#10;&#10;1. **Clone this repo**&#10;2. **Open in Android Studio**&#10;3. Connect to your Firebase Project:&#10;    - Firebase Authentication (Email/Phone)&#10;    - Firebase Firestore (couple data, chat, mood, etc.)&#10;    - Firebase Storage (optional images)&#10;4. Setup environment variables (`google-services.json`)&#10;5. Start developing!&#10;&#10;---&#10;&#10;##  Testing &amp; Deployment&#10;&#10;- Use **emulators** or **two physical devices** to test the couple connection flow.&#10;- Manual QA checklist for:&#10;    - Pairing flow&#10;    - Real-time message sync&#10;    - Mood state sync&#10;    - Privacy/Lock behavior&#10;- Deploy via internal testing → Google Play Console (Closed Alpha)&#10;&#10;---&#10;&#10;##  Built With Love&#10;&#10;This app is a personal project to heal, connect, and build trust between two people. Every feature was designed with emotional intention, not just functionality.&#10;&#10;If you want to contribute or need help building something like this, feel free to reach out.&#10;&#10;---&#10;" />
              <option name="updatedContent" value="# ❤️ You&amp;Me – A Private App for Two&#10;&#10;**You&amp;Me** is a private emotional space for two people in a relationship. Built to strengthen connection, understanding, and love through meaningful features that go beyond chat—supporting real-time emotions, reflection, scheduling, and healing.&#10;&#10;---&#10;&#10;## ✨ MVP Highlights&#10;&#10;-  Secure 1:1 pairing using Couple Codes&#10;-  Real-time messaging with invisible message option&#10;-  Mood sharing system&#10;-  Thought Bubbles with delayed reveals&#10;- ⏳ Reassurance message scheduler&#10;-  Misunderstanding logger and emotion analytics&#10;-  Full privacy control with app lock&#10;-  Shared calendar &amp;  AI Companion (future scope)&#10;&#10;---&#10;&#10;##  Tech Stack&#10;&#10;- **Frontend**: Android Studio, Kotlin (Jetpack Compose)&#10;- **Backend**: Firebase Firestore (NoSQL), Firebase Auth, Firebase Functions (optional)&#10;- **Storage**: Firebase Cloud Storage&#10;- **Notifications**: Firebase Cloud Messaging (FCM)&#10;- **Analytics**: Firebase Analytics / custom Firestore logic&#10;&#10;---&#10;&#10;##  Features&#10;&#10;###  Couple Code System&#10;- Generate or enter a **6-digit code** to securely pair with your partner.&#10;- Ensures that **only one other person** can connect with you.&#10;- All app data is scoped to a shared `coupleId`.&#10;&#10;###  Real-Time Messaging&#10;- Fast, low-latency chatting system using Firebase Firestore.&#10;- Timestamped messages with sender identity.&#10;- Optionally send **&quot;invisible&quot; messages** that get revealed on interaction.&#10;&#10;###  Mood Sharing&#10;- Choose from preset moods (Happy, Sad, Angry, Anxious, Loved, etc.).&#10;- Share instantly with partner—each mood update is real-time.&#10;- Useful for days when words are hard.&#10;&#10;###  Thought Bubble (Delayed Reveal Notes)&#10;- Add emotional or sensitive thoughts.&#10;- Partner gets notified but must **tap to reveal** when ready.&#10;- Great for healing from misunderstandings or building trust.&#10;&#10;### ⏳ Reassurance Scheduler&#10;- Pre-schedule loving or encouraging messages:&#10;    - “You’re doing amazing.”&#10;    - “You are loved.”&#10;    - “I believe in you.”&#10;- Supports:&#10;    - One-time or **recurring messages**&#10;    - Scheduled **reveal time**&#10;    - Optional animation or “gift-wrap” effects&#10;&#10;###  Shared Calendar&#10;- Create and share events (trips, anniversaries, exams, etc.).&#10;- View partner's additions with countdown timers.&#10;- Receive push notifications for upcoming events.&#10;&#10;###  Misunderstanding Logger&#10;- Log a conflict with:&#10;    - Timestamp&#10;    - Your thoughts and feelings&#10;    - Optional partner feedback&#10;- Track which ones have been resolved.&#10;- Analytics to show how your communication is improving.&#10;&#10;###  Emotion Analytics Dashboard&#10;- Mood trends over weeks/months.&#10;- Average resolution time for misunderstandings.&#10;- Most common reassurance messages.&#10;- **Private to the couple only.**&#10;&#10;###  App Lock &amp; Privacy Mode&#10;- PIN, password, or biometric app locking.&#10;- Privacy Mode: Hides text previews, emoji reactions, and sensitive thoughts when locked.&#10;&#10;### ️ Relationship Timeline *(Auto-generated)*&#10;- Automatically creates a timeline of milestones:&#10;    - First linked date&#10;    - Messages with special tags (e.g., first &quot;I love you&quot;)&#10;    - Shared calendar events&#10;    - Custom entries&#10;&#10;### ✅ Bucket List for Two&#10;- Add dreams and goals together.&#10;- Check them off with:&#10;    - Date&#10;    - Proof (photo, audio, etc.)&#10;- Keeps the relationship fun and forward-looking.&#10;&#10;###  Sleep Together Mode&#10;- Soft background music with animated heartbeats.&#10;- Shows each other’s **online/offline** sleep status.&#10;- Tied to personal schedules (optional).&#10;&#10;###  Relationship Bot (Fun + AI)&#10;- AI bot that speaks like your partner.&#10;- Pre-trained with favorite phrases or memories.&#10;- Say things like:&#10;    - “I miss you. Eat something.”&#10;    - “I love you, always.”&#10;&#10;---&#10;&#10;## ️ Setup &amp; Development&#10;&#10;1. **Clone this repo**&#10;   ~~~bash&#10;   git clone https://github.com/yourusername/youandme.git&#10;   cd youandme&#10;   ~~~&#10;2. **Open in Android Studio**&#10;3. Connect to your Firebase Project:&#10;    - Firebase Authentication (Email/Phone)&#10;    - Firebase Firestore (couple data, chat, mood, etc.)&#10;    - Firebase Storage (optional images)&#10;4. Setup environment variables (`google-services.json`)&#10;5. Start developing!&#10;&#10;---&#10;&#10;##  Testing &amp; Deployment&#10;&#10;- Use **emulators** or **two physical devices** to test the couple connection flow.&#10;- Manual QA checklist for:&#10;    - Pairing flow&#10;    - Real-time message sync&#10;    - Mood state sync&#10;    - Privacy/Lock behavior&#10;- Deploy via internal testing → Google Play Console (Closed Alpha)&#10;&#10;---&#10;&#10;##  Built With Love&#10;&#10;This app is a personal project to heal, connect, and build trust between two people. Every feature was designed with emotional intention, not just functionality.&#10;&#10;If you want to contribute or need help building something like this, feel free to reach out.&#10;&#10;---&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/youme/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/youme/MainActivity.kt" />
              <option name="originalContent" value="package com.example.youme&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import com.example.youme.ui.theme.YouMeTheme&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContent {&#10;            YouMeTheme {&#10;                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding -&gt;&#10;                    Greeting(&#10;                        name = &quot;Android&quot;,&#10;                        modifier = Modifier.padding(innerPadding)&#10;                    )&#10;                }&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun Greeting(name: String, modifier: Modifier = Modifier) {&#10;    Text(&#10;        text = &quot;Hello $name!&quot;,&#10;        modifier = modifier&#10;    )&#10;}&#10;&#10;@Preview(showBackground = true)&#10;@Composable&#10;fun GreetingPreview() {&#10;    YouMeTheme {&#10;        Greeting(&quot;Android&quot;)&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.youme&#10;&#10;import android.os.Bundle&#10;import androidx.activity.ComponentActivity&#10;import androidx.activity.compose.setContent&#10;import androidx.activity.enableEdgeToEdge&#10;import androidx.compose.foundation.layout.fillMaxSize&#10;import androidx.compose.foundation.layout.padding&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.tooling.preview.Preview&#10;import com.example.youme.ui.theme.YouMeTheme&#10;&#10;class MainActivity : ComponentActivity() {&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        enableEdgeToEdge()&#10;        setContent {&#10;            YouMeTheme {&#10;                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding -&gt;&#10;                    Greeting(&#10;                        name = &quot;Android&quot;,&#10;                        modifier = Modifier.padding(innerPadding)&#10;                    )&#10;                }&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun Greeting(name: String, modifier: Modifier = Modifier) {&#10;    Text(&#10;        text = &quot;Welcome to You&amp;Me, $name!&quot;,&#10;        modifier = modifier&#10;    )&#10;}&#10;&#10;@Preview(showBackground = true)&#10;@Composable&#10;fun GreetingPreview() {&#10;    YouMeTheme {&#10;        Greeting(&quot;Android&quot;)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>